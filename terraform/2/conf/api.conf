#cloud-config
coreos:
  units:
    - name: "etcd2.service"
      command: "start"
    - name: "fleet.service"
      command: "start"
    - name: "docker-api.service"
      command: "start"
      content: |
        [Unit]
        Description=API Service
        Author=Me
        After=docker.service

        [Service]
        Restart=always
        ExecStartPre=-/usr/bin/docker kill api
        ExecStartPre=-/usr/bin/docker rm api
        ExecStartPre=/usr/bin/docker pull doclusterdemo/haproxy
        ExecStart=/usr/bin/docker run -p 80:80 -v /etc/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro --net=host --name api doclusterdemo/haproxy
        ExecStop=/usr/bin/docker stop api
write_files:
  - path: "/etc/haproxy.cfg"
    permissions: "0644"
    owner: "root"
    content: |
      global
          log 127.0.0.1 local0
          maxconn 2000
          pidfile /var/run/haproxy.pid

          tune.ssl.default-dh-param 2048

          # SSL ciphers
          ssl-default-bind-options no-sslv3 no-tls-tickets
          ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA


      defaults
          mode    http
          option  httplog
          option  dontlognull
          option  forwardfor
          option  contstats
          option  http-server-close
          option log-health-checks
          retries 3
          option  redispatch
          timeout connect  5000
          timeout client  10000
          timeout server  10000
          log global

      frontend front
          bind *:80
          mode http
          default_backend nodes

      backend nodes
          balance roundrobin
          ${join("\n          ",formatlist("server %v %v:8080 check",split(",",backend_names),split(",",backend_urls)))}

